var styleSwitcher = { PortalId: -1, TabId: -1, SkinPath: "", PortalId: "", options: { name: "Home", gradient: "true", color: "#0088CC", bgImage: "", bgPattern: "", header: "1", layout: "wide", social: "true" }, initialize: function (PortalId, TabId, SkinPath, Skins) { var $this = this; $this.PortalId = PortalId; $this.TabId = TabId; $this.SkinPath = SkinPath; jQuery("body").append(jQuery('<link rel="stylesheet">').attr("href", $this.SkinPath + "Resources/css/style-switcher.css")); jQuery("body").append(jQuery('<link rel="stylesheet/less">').attr("href", $this.SkinPath + "Resources/css/skin.less.txt")); less = { env: "development" }; jQuery.getScript($this.SkinPath + "Resources/js/less.js", function (data, textStatus, jqxhr) { $this.build(Skins); $this.events(); if (jQuery.cookie("SkinOptions") != null) { $this.options = JSON.parse(jQuery.cookie("SkinOptions")); $this.container.find("a").removeClass(); $this.container.find("select").find("option[value='" + jQuery.cookie("SkinName") + "']").attr("selected", true); $this.container.find(".options-links a[data-value='" + $this.options.header + "']").addClass("active"); $this.container.find(".options-links a[data-layout-type='" + $this.options.layout + "']").addClass("active"); $this.setColor($this.options.color); if ($this.container.find(".options a[data-color-hex='" + $this.options.color + "']").length) $this.container.find(".options a[data-color-hex='" + $this.options.color + "']").addClass("active"); else { $this.container.find("#colorSelector").attr("data-color-hex", $this.options.color).css("background-color", $this.options.color).addClass("active"); $this.container.find("#colorSelector").ColorPickerSetColor($this.options.color) } $this.setLayoutStyle($this.options.layout); if ($this.options.bgImage != "") { $this.container.find(".images a[data-image='" + $this.options.bgImage + "']").addClass("active"); if ($this.options.layout == "boxed") $this.setImage($this.options.bgImage) } else if ($this.options.bgPattern != "") { $this.container.find(".patterns a[data-pattern='" + $this.options.bgPattern + "']").addClass("active"); if ($this.options.layout == "boxed") $this.setPattern($this.options.bgPattern) } if ($this.options.layout == "boxed") { $this.container.find("div.images").show(); $this.container.find("div.patterns").show() } if ($this.options.social == "true") { $this.container.find("input.social-icons").attr("checked", 'true'); jQuery("header div.social-icons").show() } else { $this.container.find("input.social-icons").removeAttr('checked'); jQuery("header div.social-icons").hide() } if ($this.options.gradient == "true") $this.container.find("input#colorGradient").attr("checked", 'true'); else $this.container.find("input#colorGradient").removeAttr('checked'); $this.open() } else if ($.cookie("SkinName") != null) { $this.container.find("select").find("option[value='" + jQuery.cookie("SkinName") + "']").attr("selected", true); $this.bind(jQuery.cookie("SkinName")) } else $this.bind("") }) }, build: function (Skins) { var $this = this; var switcher = jQuery("<div />").attr("id", "styleSwitcher").addClass("style-switcher hidden-phone").append(jQuery("<h4 />").html("Style Switcher").append(jQuery("<a />").attr("href", "#").append(jQuery("<i />").addClass("icon icon-cogs"))), jQuery("<div />").addClass("style-switcher-wrap").append(jQuery("<h5 />").append(jQuery("<a />").attr("href", "#").css("float", "right").css("font-weight", "bold").css("color", "#999999").css("margin-bottom", "-20px").attr("onclick", "jQuery('#getCSSModal').modal('show'); return false;").html("+ New")), jQuery("<div />").css("clear", "both"), jQuery("<h5 />").html("Skin"), jQuery("<select style='width:175px; outline:0;' />"), jQuery("<div />").css("margin-top", "10px").css("position", "relative").append(jQuery("<h5 />").html("Colors"), jQuery("<div />").addClass("color-gradient").append(jQuery("<input />").attr("id", "colorGradient").attr("checked", $this.options.gradient).attr("type", "checkbox"), jQuery("<label />").attr("for", "colorGradient").html("Gradient"))), jQuery("<ul />").addClass("colors").addClass("options").attr("data-type", "colors"), jQuery("<div />").addClass("options-links header").append(jQuery("<h5 />").html("Headers")).append(jQuery("<a />").attr("href", "#").attr("data-value", "1").addClass("active").html("1"), jQuery("<a />").attr("href", "#").attr("data-value", "2").html("2"), jQuery("<a />").attr("href", "#").attr("data-value", "3").html("3"), jQuery("<a />").attr("href", "#").attr("data-value", "4").html("4"), jQuery("<a />").attr("href", "#").attr("data-value", "5").html("5")), jQuery("<h5 />").html("Layout Style"), jQuery("<div />").addClass("options-links layout").append(jQuery("<a />").attr("href", "#").attr("data-layout-type", "wide").addClass("active").html("Wide"), jQuery("<a />").attr("href", "#").attr("data-layout-type", "boxed").html("Boxed")), jQuery("<div />").hide().addClass("images").append(jQuery("<h5 />").html("Background Images"), jQuery("<ul />").addClass("options").attr("data-type", "images")), jQuery("<div />").hide().addClass("patterns").append(jQuery("<h5 />").html("Background Patterns"), jQuery("<ul />").addClass("options").attr("data-type", "patterns")), jQuery("<div />").css("position", "relative").append(jQuery("<h5 />").html("Social Icons"), jQuery("<input />").attr("class", "social-icons").attr("checked", "true").attr("type", "checkbox")), jQuery("<hr />"), jQuery("<div />").addClass("options-links").append(jQuery("<a />").attr("id", "reset").attr("href", "#").html("Reset"), jQuery("<a />").attr("href", "#").attr("id", "get-css").attr("onclick", "styleSwitcher.getCSS(); return false;").html("Save")))); jQuery("body").append(switcher); this.container = jQuery("#styleSwitcher"); if (Skins != "") { var res = Skins.split(","); jQuery.each(res, function (index, value) { $this.container.find("select").append("<option value=" + value + " >" + value + "</option>") }) } $this.container.find('.social-icons').click(function () { if (jQuery(this).is(':checked')) jQuery("header div.social-icons").fadeIn(); else jQuery("header div.social-icons").fadeOut() }); $this.container.find("select").change(function () { jQuery.removeCookie("SkinOptions"); jQuery.removeCookie("Header"); jQuery.cookie("SkinName", jQuery(this).find("option:selected").val()); window.location.href = window.location.href.split("?")[0] + '?SkinSrc=[G]Skins/Porto/' + jQuery(this).find("option:selected").val() }); var modalHTML = '<div id="getCSSModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button><h4 class="modal-title" id="cssModalLabel">Create New Skin</h4></div><div class="modal-body"><div id="themeAlert" class="alert alert-danger fade in" style="display:none;"></div><table><tr><td width="150px"><strong>Skin Name</strong></td><td><input class="form-control" style="height: auto;padding: 6px 12px;" type="text" id="getThemeName" /></td></tr></table><textarea id="getCSSTextarea" class="get-css" style="display:none;" readonly></textarea></div><div class="modal-footer"><button id="Save" class="btn btn-primary save" aria-hidden="true" onclick="styleSwitcher.create(); return false;">Create</button><button class="btn btn-default" data-dismiss="modal" aria-hidden="true">Cancel</button></div></div></div></div> '; var applyHTML = '<div id="getapplyCSSModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button><h4 class="modal-title" id="cssModalLabel">Apply Skin </h4></div><div class="modal-body"><strong>Would you like to apply this skin to current portal?</strong></div><div class="modal-footer"><button class="btn btn-primary save" aria-hidden="true" onclick="styleSwitcher.apply()">Apply</button><button class="btn btn-default" data-dismiss="modal" aria-hidden="true">No</button></div></div></div></div>'; var modalConfrmed = '<div id="getConfirmedModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button><h4 class="modal-title" id="cssModalLabel">Confirmation Message</h4></div><div class="modal-body"><strong>Would you like to overwrite your existing skin?</strong></div><div class="modal-footer"><button class="btn btn-primary save" aria-hidden="true" onclick="styleSwitcher.save(); return false;">Yes</button><button class="btn" data-dismiss="modal" aria-hidden="true">No</button></div></div></div></div>'; jQuery("body").append(modalHTML + modalConfrmed + applyHTML); var colors = [{ "Hex": "#0088cc", "colorName": "Blue" }, { "Hex": "#4eb25c", "colorName": "Green" }, { "Hex": "#4a5b7d", "colorName": "Navy" }, { "Hex": "#e05048", "colorName": "Red" }, { "Hex": "#b8a279", "colorName": "Beige" }, { "Hex": "#c71c77", "colorName": "Pink" }, { "Hex": "#734ba9", "colorName": "Light Purple" }, { "Hex": "#2baab1", "colorName": "Cyan" }, { "Hex": "#6d0839", "colorName": "Snow Cherry" }, { "Hex": "#39552F", "colorName": "Evergreen Forest" }, { "Hex": "#f00000", "colorName": "Big Apple" }, { "Hex": "#f07830", "colorName": "Princess Peachy" }, { "Hex": "#800080", "colorName": "Dark Purple" }, { "Hex": "#05349e", "colorName": "Digital Frost" }, { "Hex": "#008584", "colorName": "Selective Memory"}]; var colorList = this.container.find("ul[data-type=colors]"); $.each(colors, function (i, value) { var color = jQuery("<li />").append(jQuery("<a />").css("background-color", colors[i].Hex).attr({ "data-color-hex": colors[i].Hex, "href": "#", "title": colors[i].colorName })); if (i == 0) color.find("a").addClass("active"); colorList.append(color) }); var currentSkinColor = colors[0].Hex; var colorPicker = jQuery("<li />").append(jQuery("<a />").attr({ "id": "colorSelector", "style": "background-color: " + currentSkinColor, "data-color-hex": currentSkinColor, "href": "#" }).append(jQuery("<span />").addClass("color-picker-icon"))); colorList.append(colorPicker); colorList.find("a").click(function (e) { e.preventDefault(); colorList.find("a").removeClass("active"); jQuery(this).addClass("active"); $this.createCookie(); $this.setColor(jQuery(this).attr("data-color-hex")) }); $this.container.find(jQuery("#colorSelector")).ColorPicker({ color: currentSkinColor, onShow: function (colpkr) { jQuery(colpkr).fadeIn(500); return false }, onHide: function (colpkr) { jQuery(colpkr).fadeOut(500); return false }, onChange: function (hsb, hex, rgb) { $this.setColor("#" + hex); jQuery("#colorSelector").css("background-color", "#" + hex); jQuery("#colorSelector").attr("data-color-hex", "#" + hex); $this.createCookie() } }); $this.container.find("#colorGradient").on("change", function () { var active = jQuery(this).is(":checked").toString(); $this.options.gradient = active; $this.setColor(jQuery("#styleSwitcher ul[data-type=colors] a.active").attr("data-color-hex")); $this.createCookie() }); this.container.find("div.options-links.layout a").click(function (e) { e.preventDefault(); $this.container.find("div.options-links.layout a.active").removeClass("active"); jQuery(this).addClass("active"); $this.createCookie(); window.location.reload() }); var patterns = ["gray_jean", "linedpaper", "az_subtle", "blizzard", "denim", "fancy_deboss", "honey_im_subtle", "linen", "pw_maze_white", "skin_side_up", "stitched_wool", "straws", "subtle_grunge", "textured_stripes", "wild_oliva", "worn_dots", "bright_squares", "random_grey_variations"]; var patternsList = this.container.find("ul[data-type=patterns]"); $.each(patterns, function (key, value) { var pattern = jQuery("<li />").append(jQuery("<a />").addClass("pattern").css("background-image", "url(" + $this.SkinPath + "Resources/img/patterns/" + value + ".png)").attr({ "data-pattern": value, "href": "#", "title": value.charAt(0).toUpperCase() + value.slice(1) })); patternsList.append(pattern) }); var images = ["bg_img1", "bg_img2", "bg_img3", "bg_img4", "bg_img5"]; var imagesList = this.container.find("ul[data-type=images]"); $.each(images, function (key, value) { var image = jQuery("<li />").append(jQuery("<a />").css("background-image", "url(" + $this.SkinPath + "Resources/img/images/" + value + ".jpg)").attr({ "data-image": value, "href": "#", "title": value.charAt(0).toUpperCase() + value.slice(1) })); imagesList.append(image) }); patternsList.find("a").click(function (e) { e.preventDefault(); patternsList.find("a").removeClass(); imagesList.find("a").removeClass(); jQuery(this).addClass("active"); $this.setPattern(jQuery(this).attr("data-pattern")); $this.createCookie() }); imagesList.find("a").click(function (e) { e.preventDefault(); patternsList.find("a").removeClass(); imagesList.find("a").removeClass(); jQuery(this).addClass("active"); $this.setImage(jQuery(this).attr("data-image")); $this.createCookie() }); $this.container.find(".header").find("a").click(function (e) { e.preventDefault(); jQuery(this).parent().find("a").removeClass("active"); jQuery(this).addClass("active"); $this.createCookie(); window.location.reload() }); $this.container.find("a#reset").click(function (e) { e.preventDefault(); $this.reset() }) }, events: function () { var $this = this; $this.container.find("h4 a").click(function (e) { e.preventDefault(); $this.open() }) }, open: function () { var $this = this; if ($this.container.hasClass("active")) { $this.container.animate({ left: "-195px" }, 300).removeClass("active") } else { $this.container.animate({ left: "0" }, 300).addClass("active") } }, createCookie: function () { var $this = this; $this.options.name = $this.container.find("select option:selected").val(); $this.options.color = $this.container.find(".options .active").attr("data-color-hex"); $this.options.header = $this.container.find(".header .active").attr("data-value"); $this.options.layout = $this.container.find(".layout .active").attr("data-layout-type"); if ($this.container.find("input.social-icons").is(':checked')) $this.options.social = "true"; else $this.options.social = "false"; if ($this.container.find("input#colorGradient").is(':checked')) $this.options.gradient = "true"; else $this.options.gradient = "false"; var bgi = $this.container.find(".images .active").attr("data-image"); var bgp = $this.container.find(".patterns .active").attr("data-pattern"); if (bgi != null) { $this.options.bgImage = bgi; $this.options.bgPattern = "" } else if (bgp != null) { $this.options.bgPattern = bgp; $this.options.bgImage = "" } $.cookie('SkinOptions', JSON.stringify($this.options)); $.cookie('Header', $this.options.header); $.cookie('Layout', $this.options.layout); $.cookie('SkinName', $this.container.find("select option:selected").val()) }, setColor: function (color) { var $this = this; if (this.isChanging) { return false } $this.options.color = color; less.modifyVars({ gradient: $this.options.gradient, skinColor: color }) }, setLayoutStyle: function (style) { var $this = this; var layoutStyles = $this.container.find("div.options-links.layout"); var BackgroundType = $this.container.find("div.options-links.type"); var backgroundPatterns = $this.container.find("div.patterns"); var backgroundImages = $this.container.find("div.images"); layoutStyles.find("a.active").removeClass("active"); layoutStyles.find("a[data-layout-type=" + style + "]").addClass("active"); if (style == "wide") { backgroundImages.hide(); backgroundPatterns.hide(); jQuery(".layout_trigger").css("background-image", "none"); jQuery("body").removeClass("boxed").css("background-image", "none") } else { BackgroundType.show(); backgroundPatterns.show(); backgroundImages.show(); var bgi = $this.container.find(".images .options .active").attr("data-image"); var bgp = $this.container.find(".patterns .options .active").attr("data-pattern"); if (bgi != null) jQuery(".layout_trigger").css("background-image", "url(" + $this.SkinPath + "Resources/img/images/" + bgi + ".jpg)"); else if (bgp != null) jQuery("body").css("background-image", "url(" + $this.SkinPath + "Resources/img/patterns/" + bgp + ".png)") } }, setImage: function (image) { var $this = this; jQuery("body").css("background", "none"); jQuery(".layout_trigger").css("background-image", "url( " + $this.SkinPath + "Resources/img/images/" + image + ".jpg)") }, setPattern: function (pattern) { var $this = this; jQuery(".layout_trigger").css("background", "none"); jQuery("body").css("background-image", "url( " + $this.SkinPath + "Resources/img/patterns/" + pattern + ".png)") }, reset: function () { jQuery.removeCookie("SkinOptions"); jQuery.removeCookie("Header"); jQuery.removeCookie("Layout"); jQuery.removeCookie("SkinName"); window.location.href = window.location.href.replace(window.location.search, '') }, getCSS: function () { var $this = this; var raw = ""; if (jQuery("body").hasClass("boxed")) { var BGImage = $this.container.find(".images .options a.active").attr("data-image"); var BGPattern = $this.container.find(".patterns .options a.active").attr("data-pattern"); if (BGImage != null) raw = '.layout_trigger { background-image: url("Resources/img/images/' + BGImage + '.jpg"); }'; else raw = 'body { background-image: url("Resources/img/patterns/' + BGPattern + '.png"); }' } if (!$this.container.find('.social-icons').is(':checked')) raw += "header div.social-icons {display: none;}"; jQuery("#getCSSTextarea").text(raw + jQuery('style[id^="less:"]').text()); jQuery("#getConfirmedModal").modal("show") }, create: function () { var $this = this; var Name = jQuery("#getThemeName").val(); var regexSpace = /\s/g; var regexAlphabet = /^[a-zA-Z]*$/; if (Name != "") { if (regexSpace.test(Name)) { jQuery("#themeAlert").html("Skin Name can't contain spaces").show(); return } if (!regexAlphabet.test(Name)) { jQuery("#themeAlert").html("Skin Name contain only letters").show(); return } jQuery.post($this.SkinPath + "handlers/ajax.ashx?PortalId=" + $this.PortalId, { Name: Name, Action: 'Create' }, function (data) { if (data == "File Exist") jQuery("#themeAlert").html("Skin name already exist").show(); else if (data == "Success") { jQuery('#getCSSModal').modal('hide'); jQuery("#themeAlert").hide(); jQuery('#getapplyCSSModal').modal('show') } }) } else jQuery("#themeAlert").html("Please specify Skin Name").show() }, save: function () { var $this = this; $this.options.name = $this.container.find("select option:selected").val(); $this.options.color = $this.container.find("ul[data-type=colors]").find("a.active").attr("data-color-hex"); $this.options.bgPattern = $this.container.find("ul[data-type=patterns]").find("a.active").attr("data-pattern"); $this.options.bgImage = $this.container.find("ul[data-type=images]").find("a.active").attr("data-image"); $this.options.header = $this.container.find(".header .active").text(); $this.options.layout = $this.container.find(".layout .active").attr("data-layout-type"); $this.options.social = $this.container.find(".social-icons").is(':checked'); $this.options.gradient = $this.container.find("#colorGradient").is(':checked'); var CSS = jQuery("#getCSSTextarea").val(); jQuery.post($this.SkinPath + "handlers/ajax.ashx?PortalId=" + $this.PortalId, { CSS: CSS, Settings: JSON.stringify($this.options), Action: 'Save' }, function (data) { if (data == "Success") { jQuery("#themeAlert").hide(); jQuery("#getConfirmedModal").modal("hide"); jQuery.removeCookie("SkinOptions"); jQuery.removeCookie("SkinName") } }) }, apply: function () { var $this = this; var Name = jQuery("#getThemeName").val(); if (Name != "") { jQuery.post($this.SkinPath + "handlers/ajax.ashx?PortalId=" + $this.PortalId, { Action: "Apply", TabId: $this.TabId, Name: Name }, function (data) { if (data == "Success") { jQuery('#getapplyCSSModal').modal('hide'); $this.reset() } }) } }, bind: function (Name) { var $this = this; jQuery.ajax({ url: $this.SkinPath + "handlers/ajax.ashx?PortalId=" + $this.PortalId + "&Action=Bind&Name=" + Name + "&TabId=" + $this.TabId, dataType: "json", async: false, cache: false, success: function (data) { if (Name == "") $this.container.find("select").find("option[value='" + data.Name + "']").attr("selected", true); jQuery("#get-css").attr("onclick", "styleSwitcher.getCSS(); return false;"); $this.container.find("a").removeClass(); $this.container.find(".header a[data-value='" + data.Header + "']").addClass("active"); if ($this.container.find(".options a[data-color-hex='" + data.Color + "']").length) $this.container.find(".options a[data-color-hex='" + data.Color + "']").addClass("active"); else { $this.container.find("#colorSelector").attr("data-color-hex", data.Color).css("background-color", data.Color).addClass("active"); $this.container.find("#colorSelector").ColorPickerSetColor(data.Color) } if (data.Gradient) { $this.options.gradient = "true"; $this.container.find("input#colorGradient").attr("checked", 'true') } else { $this.options.gradient = "false"; $this.container.find("input#colorGradient").removeAttr('checked') } $this.setColor(data.Color); if (data.BGPattern != null) $this.container.find(".patterns .options a[data-pattern='" + data.BGPattern + "']").addClass("active"); else if (data.BGImage != null) $this.container.find(".images .options a[data-image='" + data.BGImage + "']").addClass("active"); $this.container.find(".layout a[data-layout-type='" + data.Layout + "']").addClass("active"); if (data.Layout == "boxed") { $this.container.find("div.images").show(); $this.container.find("div.patterns").show() } else { $this.container.find("div.images").hide(); $this.container.find("div.patterns").hide() } if (data.Social) $this.container.find("input.social-icons").attr("checked", 'true'); else $this.container.find("input.social-icons").removeAttr('checked') } }) } };